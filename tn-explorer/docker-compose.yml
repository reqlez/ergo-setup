version: "3.8"

networks:
  default:
    name: tn-ergo-explorer
  tn-ergo-node:
    external: true

volumes:
  tn_ergo_redis:
    external: true
  tn_ergo_redis2:
    external: true

services:
  # Postgresql database
  db:
    build:
      context: ./db
      args:
        EXPLORER_VERSION: 9.17.3-B1
    # -- Uncomment and edit if wanting to set custom work_mem value
    # -- https://www.postgresql.org/docs/current/runtime-config-resource.html
    # command: ["postgres", "-c", "work_mem=4MB"]
    shm_size: 4g
    environment:
      POSTGRES_DB: ergo
      POSTGRES_USER: ergo
    env_file:
      # Defines POSTGRES_PASSWORD
      - ./db/db.secret
    volumes:
      # Mapped volume for easier Postgres upgrades.
      # Make sure the path exists or edit it here.
      # See also readme_pg_upgrade.md
      - /var/lib/tn_explorer_pg/14/data:/var/lib/postgresql/data
    ports:
      - "5443:5432"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  # Redis
  redis:
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server"]
    ports:
      - "127.0.0.1:6389:6379"
    volumes:
      - tn_ergo_redis:/usr/local/etc/redis
    restart: unless-stopped

  # Redis2
  redis2:
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server"]
    ports:
      - "127.0.0.1:6390:6379"
    volumes:
      - tn_ergo_redis2:/usr/local/etc/redis
    restart: unless-stopped

  # Explorer backend chain-grabber
  grabber:
    build:
      context: ./explorer-backend-9.17.3-B1
      dockerfile: chain-grabber.Dockerfile
    env_file:
      # Defines POSTGRES_PASSWORD
      - ./db/db.secret
    volumes:
      - ./explorer-backend.conf:/explorer-backend.conf:ro
    networks:
      - default
      - tn-ergo-node
    command: /explorer-backend.conf
    links:
      - "db"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  # Mempool tracker
  utx-tracker:
    build:
      context: ./explorer-backend-9.17.3-B1
      dockerfile: utx-tracker.Dockerfile
    env_file:
      # Defines POSTGRES_PASSWORD
      - ./db/db.secret
    volumes:
      - ./explorer-backend.conf:/explorer-backend.conf:ro
    networks:
      - default
      - tn-ergo-node
    command: /explorer-backend.conf
    links:
      - "db"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  # Mempool broadcaster
  utx-broadcaster:
    build:
      context: ./explorer-backend-9.17.3-B1
      dockerfile: utx-broadcaster.Dockerfile
    volumes:
      - ./explorer-backend.conf:/explorer-backend.conf:ro
    networks:
      - default
      - tn-ergo-node
    command: /explorer-backend.conf
    links:
      - "redis"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  # Explorer API
  api:
    build:
      context: ./explorer-backend-9.17.3-B1
      dockerfile: explorer-api.Dockerfile
    env_file:
      # Defines POSTGRES_PASSWORD
      - ./db/db.secret
    volumes:
      - ./explorer-backend.conf:/explorer-backend.conf:ro
    command: /explorer-backend.conf
    links:
      - "db"
      - "redis"
      - "redis2"
    restart: unless-stopped
    ports:
      - 8090:8080
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  # Explorer UI 1
  tosi-ui:
    build:
      context: ./ui
      dockerfile: tosi.Dockerfile
      args:
        # Set this to the url the api should be accessed at: http(s)://<your-ip-or-domain>
        API: "https://tn-ergo-explorer.tosidrop.io"
        # Name of the network (mainnet, testnet, devnet, ...)
        LABEL: "Testnet"
    links:
      - "api"
    ports:
      - 3011:3000
    restart: unless-stopped
    
  # Explorer UI 2
  neta-ui:
    build:
      context: ./ui
      dockerfile: neta.Dockerfile
      args:
        # Set this to the url the api should be accessed at: http(s)://<your-ip-or-domain>
        API: "https://tn-ergo-explorer.anetabtc.io"
        # Name of the network (mainnet, testnet, devnet, ...)
        LABEL: "Testnet"
    links:
      - "api"
    ports:
      - 3012:3000
    restart: unless-stopped
  
  # GraphQL
  graphql:
    build:
      context: ./graphql
      args:
        VERSION: "0.4.2"
    environment:
      # database host address
      DB_HOST: db
      # database host port
      DB_PORT: 5432
      # database name
      DB_NAME: ergo
      # database user name
      DB_USER_NAME: ergo
      # ergo node address and port
      ERGO_NODE_ADDRESS: http://172.17.0.1:9052
      # optional: MAINNET or TESTNET
      NETWORK: TESTNET
      # optional: redis host address
      REDIS_HOST: redis
      # optional: redis host port
      REDIS_PORT: 6379
      # optional: redis username
      # REDIS_USER_NAME:
      # optional: redis user password
      # REDIS_USER_PWD:
      # optional: maximum query depth
      MAX_QUERY_DEPTH: 5
    env_file:
      # Defines DB_USER_PWD
      - ./db/db.secret
    links:
      - "db"
      - "redis"
    ports:
      - 3010:3000
    restart: unless-stopped
